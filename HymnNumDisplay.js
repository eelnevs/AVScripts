var HymnDictionary = {
    1:1, 5:2, 7:3, 8:4, 10:5, 11:6, 12:7, 13:8, 15:9, 16:10, 17:11, 18:12, 20:13, 21:14, 22:15, 23:16, 24:17, 26:18, 28:19, 29:20, 30:21, 
    32:22, 34:23, 36:24, 39:25, 40:26, 41:27, 43:28, 48:29, 50:30, 52:31, 56:33, 57:34, 61:35, 62:36, 65:37, 66:38, 67:39, 70:40, 73:41, 
    77:42, 78:43, 79:44, 81:47, 82:48, 84:49, 86:50, 101:51, 105:52, 108:53, 112:54, 116:55, 117:56, 118:57, 123:58, 124:59, 125:60, 127:66, 
    128:67, 132:68, 133:69, 137:70, 139:71, 142:72, 146:73, 148:74, 151:75, 152:76, 154:77, 162:78, 163:79, 170:80, 171:81, 172:82, 175:83, 
    180:84, 181:85, 188:86, 189:87, 190:88, 195:89, 197:90, 202:91, 203:93, 206:94, 208:95, 220:96, 221:97, 222:98, 223:99, 224:100, 226:101, 
    227:102, 233:103, 241:110, 242:112, 243:113, 244:114, 248:115, 250:116, 251:117, 255:119, 265:120, 266:121, 267:127, 268:129, 271:130, 
    272:131, 273:132, 277:133, 278:134, 279:135, 284:137, 286:138, 288:139, 296:141, 298:142, 299:143, 300:144, 302:146, 303:147, 305:148, 
    306:149, 308:151, 309:152, 310:153, 313:154, 322:155, 324:156, 325:157, 328:159, 333:160, 340:161, 348:165, 350:167, 373:168, 382:170, 
    389:171, 390:172, 395:173, 396:174, 398:175, 399:176, 403:177, 405:178, 412:179, 426:180, 430:181, 431:183, 433:184, 436:185, 437:186, 
    438:187, 439:188, 441:189, 445:190, 446:191, 449:193, 463:194, 472:195, 473:196, 474:197, 475:198, 481:199, 482:200, 483:201, 487:202, 
    488:203, 490:204, 491:205, 493:207, 495:209, 496:210, 497:211, 498:212, 499:213, 500:214, 501:215, 502:216, 503:217, 505:218, 507:219, 
    508:220, 509:224, 510:232, 513:235, 514:236, 522:237, 535:238, 536:239, 537:240, 538:241, 539:242, 540:243, 541:253, 542:254, 546:255, 
    548:256, 549:257, 551:258, 554:259, 556:260, 561:262, 563:263, 564:264, 569:267, 583:268, 589:269, 591:270, 593:271, 594:272, 595:273, 
    600:283, 602:284, 608:287, 609:288, 610:289, 611:290, 612:291, 618:293, 622:294, 626:295, 630:296, 631:297, 639:298, 640:299, 666:303, 
    717:304, 733:305, 734:306, 735:307, 736:308, 737:309, 738:310, 739:311, 740:312, 741:313, 742:314, 743:315, 744:316, 745:318, 746:319, 
    747:320, 748:321, 749:322, 750:323, 764:326, 769:327, 770:328, 771:329, 775:330, 779:331, 780:332, 781:333, 782:334, 783:335, 784:336, 
    786:337, 798:338, 799:339, 801:340, 802:341, 806:342, 811:343, 812:344, 813:345, 814:346, 815:347, 819:348, 820:349, 821:350, 824:351, 
    831:353, 832:354, 837:356, 839:357, 840:358, 841:359, 845:360, 846:361, 847:362, 848:363, 851:364, 852:365, 853:366, 854:367, 863:390, 
    864:391, 866:392, 867:393, 871:394, 877:395, 880:396, 882:397, 885:398, 886:399, 889:400, 890:401, 893:402, 894:403, 904:405, 908:406, 
    909:407, 910:408, 911:409, 912:410, 913:411, 914:412, 917:413, 921:414, 922:415, 923:416, 925:417, 930:418, 936:423, 937:424, 938:425, 941:426, 
    942:427, 943:428, 944:429, 945:430, 947:431, 948:433, 949:434, 954:435, 956:436, 958:438, 960:439, 962:440, 965:441, 966:442, 967:443, 969:444, 
    970:445, 971:450, 972:451, 973:452, 975:454, 976:455, 978:456, 980:457, 981:458, 986:460, 991:461, 994:462, 998:463, 999:464, 1002:465, 
    1003:466, 1004:467, 1005:468, 1006:469, 1007:470, 1008:471, 1009:472, 1010:473, 1017:474, 1019:475, 1024:476, 1025:274, 1040:477, 1043:478, 
    1045:479, 1048:481, 1050:482, 1051:483, 1052:484, 1058:485, 1059:486, 1065:487, 1066:488, 1068:489, 1069:490, 1074:166, 1080:491, 1081:32, 
    1083:45, 1086:46, 1095:61, 1096:62, 1097:63, 1098:64, 1101:65, 1103:92, 1104:109, 1106:104, 1107:105, 1108:106, 1110:107, 1112:108, 1113:124, 
    1115:118, 1116:125, 1117:126, 1119:122, 1121:123, 1122:136, 1125:150, 1127:162, 1131:145, 1133:169, 1134:182, 1141:206, 1142:208, 1143:225, 
    1145:226, 1146:227, 1148:228, 1149:229, 1150:230, 1151:231, 1152:275, 1153:276, 1154:277, 1159:278, 1162:265, 1163:266, 1164:245, 1167:246, 
    1168:247, 1170:248, 1171:279, 1173:280, 1174:281, 1175:282, 1178:249, 1179:250, 1180:251, 1181:252, 1187:244, 1191:222, 1193:223, 1195:285, 
    1196:286, 1198:292, 1205:301, 1206:302, 1212:324, 1214:317, 1216:325, 1220:352, 1221:369, 1222:370, 1223:371, 1224:372, 1226:373, 1229:374, 
    1231:375, 1232:376, 1234:377, 1235:378, 1237:379, 1243:355, 1246:380, 1248:381, 1251:382, 1252:383, 1254:384, 1255:385, 1260:386, 1265:387, 
    1273:388, 1275:389, 1287:404, 1293:419, 1295:420, 1299:432, 1302:446, 1311:447, 1315:448, 1319:449, 1325:459, 1327:492, 1331:493, 1333:494, 
    1335:495, 1337:496, 1339:497, 1341:498, 1345:499, 1349:421, 1350:164, 1351:422, 1352:261, 1354:437, 1355:140, 1357:163, 1359:192, 1360:128,
}
let now = new Date().getHours();
var showSP = now < 10 || now > 13;
const engInput = document.getElementById("hymn-eng");
const spInput = document.getElementById("hymn-sp");
const customInput = document.getElementById("custom-text");

function getVal(obj, key) {
    if (key == 0) return ''
    let val = obj[key];
    return val == undefined ? "-" : obj[key]
}

function getKey(obj, val) {
    if (val == 0) return ''
    let key = Object.keys(obj).find((key) => obj[key] == val);
    return key == undefined ? "-" : key
}

function HymnConverter(number, eng=true) {
    if (eng) return getVal(HymnDictionary, number)
    else return getKey(HymnDictionary, number)
}

function setHymn(eng, sp) {
    let hymns = {
        E: eng,
        S: sp
    }
    localStorage.setItem("hymn", JSON.stringify(hymns));
}

function setShowSP(showSP) {
    localStorage.setItem("showSP", showSP);
    document.getElementById("sp-div").hidden = !showSP;
}

function setCustomText(text) {
    let hymn = {
        text: text
    }
    localStorage.setItem("hymn", JSON.stringify(hymn))
}

function validate(event, max) {
    if (event.target.value > max) {
        let length = event.target.value.length;
        event.target.value = event.target.value.slice(0, length -1);
        return false;
    }
    if (event.target.value < 0) {
        event.target.value = event.target.value.replace('-', '');
    }
    return true;
}

function clearHymnInput() {
    engInput.value = '';
    spInput.value = '';
    engInput['placeholder'] = '';
    spInput['placeholder'] = '';
}

engInput.addEventListener('keyup', e => {
    if (validate(e, 1360)) {
        let number = Number.parseInt(e.target.value) || 0;
        let sp = HymnConverter(number);
        setHymn(number, sp);
        spInput.value = sp;
        customInput.value = '';
        if (sp == "-") spInput['placeholder'] = '*No Spanish*';
        if (!sp) spInput['placeholder'] = '';
    }
});

spInput.addEventListener('keyup', e => {
    if (validate(e, 500)) {
        let number = Number.parseInt(e.target.value) || 0;
        let eng = HymnConverter(number);
        setHymn(eng, number);
        engInput.value = eng;
        customInput.value = '';
        showSP = true;
        setShowSP(showSP);
        if (eng == "-") engInput['placeholder'] = '*No English*';
        if (!eng) engInput['placeholder'] = '';
    }
});

customInput.addEventListener('keypress', e => {
    if (e.key === 'Enter') {
        setCustomText(e.target.value);
        clearHymnInput();
    }
});

document.getElementById("toggle").addEventListener('click', () => {
    showSP = !showSP;
    setShowSP(showSP);
});

document.getElementById("clear").addEventListener('click', () => {
    setHymn('','');
    clearHymnInput();
    customInput.value = '';
})

// initialize data
setHymn(0,0);
setShowSP(showSP);